/* eslint-disable */
module.exports = {
name: "@monstrs/plugin-app",
factory: function (require) {
var plugin;(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{AppLibraryBuildCommand:()=>c,AppPackSourceCommand:()=>O,AppRendererBuildCommand:()=>f,AppRendererDevCommand:()=>u,AppServiceBuildCommand:()=>h,AppServiceDevCommand:()=>x,default:()=>k});const n=require("@yarnpkg/cli"),o=require("@yarnpkg/core"),a=require("clipanion");var i=function(t,e,n,o){var a,i=arguments.length,r=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(e,n,r):a(e,n))||r);return i>3&&r&&Object.defineProperty(e,n,r),r},r=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};class c extends n.BaseCommand{async execute(){const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:e}=await o.Project.find(t,this.context.cwd);await this.cli.run(["mctl","library","build","--source",this.context.cwd],{cwd:e.cwd})}}i([a.Command.Path("app","library","build"),r("design:type",Function),r("design:paramtypes",[]),r("design:returntype",Promise)],c.prototype,"execute",null);var s=function(t,e,n,o){var a,i=arguments.length,r=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(e,n,r):a(e,n))||r);return i>3&&r&&Object.defineProperty(e,n,r),r},p=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};class f extends n.BaseCommand{async execute(){const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:e}=await o.Project.find(t,this.context.cwd);await this.cli.run(["mctl","service","build","--source",this.context.cwd],{cwd:e.cwd})}}s([a.Command.Path("app","renderer","build"),p("design:type",Function),p("design:paramtypes",[]),p("design:returntype",Promise)],f.prototype,"execute",null);var l=function(t,e,n,o){var a,i=arguments.length,r=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(e,n,r):a(e,n))||r);return i>3&&r&&Object.defineProperty(e,n,r),r},d=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};class u extends n.BaseCommand{async execute(){const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:e}=await o.Project.find(t,this.context.cwd);await this.cli.run(["mctl","renderer","dev","--pretty-logs","--source",this.context.cwd],{cwd:e.cwd})}}l([a.Command.Path("app","service","dev"),d("design:type",Function),d("design:paramtypes",[]),d("design:returntype",Promise)],u.prototype,"execute",null);var y=function(t,e,n,o){var a,i=arguments.length,r=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(e,n,r):a(e,n))||r);return i>3&&r&&Object.defineProperty(e,n,r),r},m=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};class h extends n.BaseCommand{async execute(){const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:e}=await o.Project.find(t,this.context.cwd);await this.cli.run(["mctl","service","build","--source",this.context.cwd],{cwd:e.cwd})}}y([a.Command.Path("app","service","build"),m("design:type",Function),m("design:paramtypes",[]),m("design:returntype",Promise)],h.prototype,"execute",null);var w=function(t,e,n,o){var a,i=arguments.length,r=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(e,n,r):a(e,n))||r);return i>3&&r&&Object.defineProperty(e,n,r),r},g=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};class x extends n.BaseCommand{async execute(){const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:e}=await o.Project.find(t,this.context.cwd);await this.cli.run(["mctl","service","dev","--pretty-logs","--source",this.context.cwd],{cwd:e.cwd})}}w([a.Command.Path("app","service","dev"),g("design:type",Function),g("design:paramtypes",[]),g("design:returntype",Promise)],x.prototype,"execute",null);const P=require("@yarnpkg/fslib"),j=require("@yarnpkg/plugin-patch"),v=/^builtin<([^>]+)>$/;var b,R=function(t,e,n,o){var a,i=arguments.length,r=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(e,n,r):a(e,n))||r);return i>3&&r&&Object.defineProperty(e,n,r),r},C=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};class O extends n.BaseCommand{async execute(){const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:e}=await o.Project.find(t,this.context.cwd),n=await o.Cache.find(t);return(await o.StreamReport.start({configuration:t,stdout:this.context.stdout},async t=>{await t.startTimerPromise("Resolution Step",async()=>{await e.resolveEverything({report:t,cache:n})}),await t.startTimerPromise("Fetch Step",async()=>{await e.fetchEverything({report:t,cache:n})}),await P.xfs.mkdirpPromise(this.destination),await(async(t,e,n)=>{const o=t.configuration.get("rcFilename");n.reportInfo(null,o),await P.xfs.copyPromise(P.ppath.join(e,o),P.ppath.join(t.cwd,o),{overwrite:!0})})(e,this.destination,t),await(async(t,e,n)=>{const o=P.ppath.join((0,P.toFilename)(".yarn"),(0,P.toFilename)("plugins"));n.reportInfo(null,o),await P.xfs.copyPromise(P.ppath.join(e,o),P.ppath.join(t.cwd,o),{overwrite:!0})})(e,this.destination,t),await(async(t,e,n)=>{const o=t.configuration.get("yarnPath"),a=P.ppath.relative(t.cwd,o),i=P.ppath.join(e,a);n.reportInfo(null,a),await P.xfs.copyPromise(i,o,{overwrite:!0})})(e,this.destination,t),await(async(t,e,n)=>{for(const a of t){const t=P.ppath.join(a.relativeCwd,o.Manifest.fileName),i=P.ppath.join(e,t),r={};a.manifest.exportTo(r),n.reportInfo(null,t),await P.xfs.mkdirpPromise(P.ppath.dirname(i)),await P.xfs.writeJsonPromise(i,r)}})(e.workspaces,this.destination,t),await(async(t,e,n,a)=>{const i=new Set;for(const r of t.storedDescriptors.values()){const c=a(o.structUtils.isVirtualDescriptor(r)?o.structUtils.devirtualizeDescriptor(r):r);if(!c)continue;const{parentLocator:s,paths:p}=c;for(const o of p){if(v.test(o))continue;if(P.ppath.isAbsolute(o))continue;const a=t.getWorkspaceByLocator(s),r=P.ppath.join(a.relativeCwd,o);if(i.has(r))continue;i.add(r);const c=P.ppath.join(a.cwd,o),p=P.ppath.join(e,r);n.reportInfo(null,r),await P.xfs.mkdirpPromise(P.ppath.dirname(p)),await P.xfs.copyFilePromise(c,p)}}})(e,this.destination,t,t=>{if(t.range.startsWith("exec:")){const e=function(t){const{params:e,selector:n}=o.structUtils.parseRange(t),a=P.npath.toPortablePath(n);return{parentLocator:e&&"string"==typeof e.locator?o.structUtils.parseLocator(e.locator):null,path:a}}(t.range);if(!e||!e.parentLocator)return;return{parentLocator:e.parentLocator,paths:[e.path]}}if(t.range.startsWith("patch:")){const{parentLocator:e,patchPaths:n}=j.patchUtils.parseDescriptor(t);if(!e)return;return{parentLocator:e,paths:n}}}),await(async(t,e,n,o)=>{for(const a of e.markedFiles){const e=P.ppath.relative(t.cwd,a);o.reportInfo(null,e),await P.xfs.copyPromise(P.ppath.join(n,e),a)}})(e,n,this.destination,t),await(async(t,e,n)=>{const o=(0,P.toFilename)(t.configuration.get("lockfileFilename")),a=P.ppath.join(e,o);n.reportInfo(null,o),await P.xfs.mkdirpPromise(P.ppath.dirname(a)),await P.xfs.writeFilePromise(a,t.generateLockfile())})(e,this.destination,t)})).exitCode()}}R([a.Command.String("-d,--destination"),C("design:type","function"==typeof(b=void 0!==P.PortablePath&&P.PortablePath)?b:Object)],O.prototype,"destination",void 0),R([a.Command.Path("app","pack","source"),C("design:type",Function),C("design:paramtypes",[]),C("design:returntype",Promise)],O.prototype,"execute",null);const k={commands:[c,f,u,h,x,O]};plugin=e})();
return plugin;
}
};