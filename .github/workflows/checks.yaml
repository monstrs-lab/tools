name: Checks

on: [pull_request]

jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '19.8'

      - name: Install
        run: NODE_OPTIONS='-r /home/runner/work/tools/tools/.pnp.cjs --loader /home/runner/work/tools/tools/.pnp.loader.mjs' yarn install && cp .temp.pnp.loader.mjs .pnp.loader.mjs

      - name: Lint
        run: NODE_OPTIONS='-r /home/runner/work/tools/tools/.pnp.cjs --loader /home/runner/work/tools/tools/.pnp.loader.mjs' yarn checks lint
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: TypeCheck
        run: NODE_OPTIONS='-r /home/runner/work/tools/tools/.pnp.cjs --loader /home/runner/work/tools/tools/.pnp.loader.mjs' yarn checks typecheck
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: TestUnit
        run: NODE_OPTIONS='-r /home/runner/work/tools/tools/.pnp.cjs --loader /home/runner/work/tools/tools/.pnp.loader.mjs' yarn checks test unit
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: TestIntegration
        run: NODE_OPTIONS='-r /home/runner/work/tools/tools/.pnp.cjs --loader /home/runner/work/tools/tools/.pnp.loader.mjs' yarn checks test integration
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Release
        run: NODE_OPTIONS='-r /home/runner/work/tools/tools/.pnp.cjs --loader /home/runner/work/tools/tools/.pnp.loader.mjs' yarn checks release
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
