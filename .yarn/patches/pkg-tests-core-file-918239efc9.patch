diff --git a/lib/utils/makeTemporaryEnv.js b/lib/utils/makeTemporaryEnv.js
index a749507c68f750d403c8fe7e79114997ab78c265..4e8ed3eb9c0dd77c040769cfaf7b01187499b54b 100644
--- a/lib/utils/makeTemporaryEnv.js
+++ b/lib/utils/makeTemporaryEnv.js
@@ -21,7 +21,7 @@ const mte = generatePkgDriver({
         const cwdArgs = typeof projectFolder !== `undefined`
             ? [projectFolder]
             : [];
-        const yarnBinary = require.resolve(`${__dirname}/../../../../yarnpkg-cli/bundles/yarn.js`);
+        const yarnBinary = require.resolve(`${__dirname.substr(0, __dirname.indexOf(".yarn"))}yarn/cli/bundles/yarn.cjs`);
         const res = await execFile(process.execPath, [yarnBinary, ...cwdArgs, command, ...args], {
             cwd: cwd || path,
             env: {
@@ -30,8 +30,8 @@ const mte = generatePkgDriver({
                 [`PATH`]: `${nativePath}/bin${path_1.delimiter}${process.env.PATH}`,
                 [`YARN_IS_TEST_ENV`]: `true`,
                 [`YARN_GLOBAL_FOLDER`]: `${nativePath}/.yarn/global`,
-                [`YARN_NPM_REGISTRY_SERVER`]: registryUrl,
-                [`YARN_UNSAFE_HTTP_WHITELIST`]: new url_1.URL(registryUrl).hostname,
+                // [`YARN_NPM_REGISTRY_SERVER`]: registryUrl,
+                // [`YARN_UNSAFE_HTTP_WHITELIST`]: new url_1.URL(registryUrl).hostname,
                 // Otherwise we'd send telemetry event when running tests
                 [`YARN_ENABLE_TELEMETRY`]: `0`,
                 // Otherwise snapshots relying on this would break each time it's bumped
@@ -49,6 +49,7 @@ const mte = generatePkgDriver({
                 [`YARN_ENABLE_GLOBAL_CACHE`]: `false`,
                 // Older versions of Windows need this set to not have node throw an error
                 [`NODE_SKIP_PLATFORM_CHECK`]: `1`,
+                [`YARN_PNP_ENABLE_ESM_LOADER`]: `1`,
                 ...rcEnv,
                 ...env,
             },
